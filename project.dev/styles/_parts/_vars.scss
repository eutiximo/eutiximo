$fz-default-num: 16;

@mixin widths {
    $widthSizes: (
        (1, 8.33333333%),
        (2, 16.66666667%),
        (3, 25%),
        (4, 33.33333333%),
        (5, 41.66666667%),
        (6, 50%),
        (7, 58.33333333%),
        (8, 66.66666667%),
        (9, 75%),
        (10, 83.33333333%),
        (11, 91.66666667%),
        (12, 100%)
    );
    $size-modes: (
        ('-', 1px),
        ('-sm-', 576px),
        ('-md-', 768px),
        ('-lg-', 992px),
        ('-xl-', 1200px)
    );

    @each $szMod in $size-modes {
        @media (min-width: nth($szMod, 2)) {
            @each $wz in $widthSizes {
                .w#{nth($szMod, 1)}#{nth($wz, 1)} { width: nth($wz, 2); }
            }
        }
    }
}

// Mixin para contruir lista de font-weight
@mixin fontWeightStock() {
    $weights: (100, 200, 300, 400, 500, 600, 700, 800, 900, bold, bolder, lighter, inherit);
    
    @each $weight in $weights {
        .fw-#{$weight} { font-weight: $weight; }
    }
}

// Mixin para obtener estandar de tama√±os de fuentes
@mixin fontSizes($sizes: (45, 38, 32, 28, 18, 12), $offsetLineHeight: 0) {
    @each $sz in $sizes {
        $i: index($sizes, $sz);
        
        .h#{ $i }, .fz#{ $sz } {
            font-size: toRem($sz);
            line-height: toRem($sz + $offsetLineHeight);
        }
        
        .ls#{ $i * 2}px { letter-spacing: ($i * 2) + 0px; }
    }
}

// Funtcion para calcular PX a REM
@function toRem($size) {
    @return ($size / $fz-default-num) + 0rem;
}